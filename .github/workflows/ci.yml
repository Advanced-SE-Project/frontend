name: Frontend CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.18.0'

      # Step 3: Cache npm dependencies for faster builds
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Step 4: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 5a: Install Chrome dependencies
      - name: Install Chrome dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxi6 libxtst6 libatk-bridge2.0-0 libxrandr2 libgbm1 libgtk-3-0 xvfb

      # Step 5b: Start Xvfb
      - name: Start virtual display server
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &

      # Step 6: Run Unit Tests
      - name: Run Unit Tests
        run: npm test -- --watch=false --code-coverage

      # Step 7: Build the Angular app
      - name: Build Angular app
        run: npm run build --if-present

      # Step 8: Start the Angular app
      - name: Start Angular app
        run: npm run start -- --host=0.0.0.0 &
        env:
          CI: true

      # Step 9: Wait for the app to be ready
      - name: Wait for the app to be ready
        run: npx wait-on http://localhost:4200

      # Step 10: Count test files
      - name: Check for Cypress spec files
        id: check_files
        run: |
          if [ -z "$(find cypress/e2e -name '*.cy.*' -print -quit)" ]; then
            echo "No spec files found"
            echo "run_cypress=false" >> $GITHUB_ENV
          else
            echo "Spec files found"
            echo "run_cypress=true" >> $GITHUB_ENV
          fi

      # Step 11: Run Cypress tests in headless mode
      - name: Run Cypress tests
        if: ${{ env.run_cypress == 'true' }}
        run: npx cypress run --headless --browser chrome
        env:
          CYPRESS_baseUrl: http://localhost:4201


      # Step 12: Upload Coverage to Codecov
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/**/lcov.info
          fail_ci_if_error: true